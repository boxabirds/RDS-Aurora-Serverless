service: aurora-serverless
Description: Aurora Serverless Demo

#frameworkVersion: '>=1.61.0 <=1.67.0'

plugins:
  - serverless-python-requirements
custom:
  stage: ${opt:stage, self:provider.stage}
  region:
    prod: us-east-1 
    default: us-east-1 
  logRetention:
    prod: 180
    default: 14
  DatabaseName: "aurora-demo-db"
  DBClusterIdentifier: ${self:custom.stage}-${self:service.name}
  DBUpdateReplacePolicy:
    dev: Delete
    prod: Retain
  DBDeletionPolicy:
    dev: Delete
    prod: Retain
  DBBackupRetentionPeriod:
    dev:  7
    prod: 90
  DBDeletionProtection:
    dev: false
    prod: true
  DBAutoPause:
    default: true
  DBSecondsUntilAutoPause:
    dev: 600
    prod: 6000
  DBMinCapacity:
    dev: 1
    prod: 1
  DBMaxCapacity:
    dev: 1
    prod: 2
  DBClusterARN:
    Fn::Join:
      - ':'
      - - 'arn:aws:rds'
        - Ref: 'AWS::Region'
        - Ref: 'AWS::AccountId'
        - 'cluster'
        - !Ref AuroraDBCluster


provider:
  name: aws
  runtime: python3.7
  stage: dev
  stackName: ${self:custom.stage}-${self:service.name}
  region: ${self:custom.region.${self:custom.stage}, self:custom.region.default}
  stackTags:
    APP: Aurora Serverless Demo (not using data api)
    STAGE: ${self:custom.stage}
  logs:
    restApi: true
  logRetentionInDays: ${self:custom.logRetention.${self:custom.stage}, self:custom.logRetention.default}


functions:
  DBMigration:
    name: ${self:provider.stackName}-DBMigration
    description: Executes DB Schema Migrations.
    handler: db/db.handler
    memorySize: 512
    timeout: 100
    role: DBMigrationRole
    dependsOn:
      - DBMigrationLogGroup
    environment:
      DB_CLUSTER_ARN:
        ${self:custom.DBClusterARN}
      DB_SECRET_ARN:
        !Ref ClusterSecret
      DB_NAME: 'rds_demo_db'


package:
  exclude:
    - node_modules/**
    - set_env_vars.sh
    - package.json
    - package-lock.json
    - README.md


resources:
  - ${file(resources/stackinfo.yml)}
  # VPC
  - ${file(resources/vpc/vpc.yml)}
  # RDS Aurora Serverless
  - ${file(resources/rds/AuroraRDSServerless.yml)}
  # Log Groups
  - ${file(resources/loggroup/LogGroups.yml)}
  # cfn Custom Resource
  - ${file(resources/custom/DBMigrationTrigger.yml)}
  - ${file(resources/custom/DBMigrationRole.yml)}

